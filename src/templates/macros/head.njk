{% set image_defaultpath="assets/images" %}
{% set css_defaultpath="assets/css" %}
{% set js_defaultpath="assets/js" %}
{% set fonts_defaultpath="assets/fonts" %}

{% macro render(activePage) -%}
    <!-- Meta tags-->
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="keywords" content="Photography Wedding Prewedding Shoot">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="Description" content="The Dewdrop Project - a photography company, wedding photography, prewedding pohotgraphy, kids shoot, maternity shoots, corporate shoots.">
    <meta name="theme-color" content="#FFF">
    <!-- Title of the page -->
    <title>The Dewdrop Project</title>
    <!-- Icons -->
    <link rel="icon" type="image/x-icon" href="{{image_defaultpath}}/Icons/favicon_io/favicon.ico">
    <link rel="apple-touch-icon" sizes="192x192" href="{{image_defaultpath}}/Icons/favicon_io/apple-touch-icon.png">
    <link rel="manifest" href="assets/manifest.json">
    <!-- CSS references -->
    <link rel="stylesheet" type="text/css" href="{{css_defaultpath}}/main.css" media="all">
    <link rel="stylesheet" type="text/css" href="{{css_defaultpath}}/plugins/slider.css" media="all">
    <link rel="stylesheet" type="text/css" href="{{css_defaultpath}}/plugins/simplelightbox.css" media="all">
    <link rel="stylesheet" type="text/css" href="{{css_defaultpath}}/plugins/scroll-to-top.css" media="all">
    <!-- Font references -->
    <link rel="prefetch" href="https://fonts.googleapis.com/css?family=Quicksand&amp;display=swap" async>
    <link rel="prefetch" href="https://fonts.googleapis.com/css?family=Gotu&amp;display=swap" async>
    <link rel="stylesheet" href = "https://fonts.googleapis.com/icon?family=Material+Icons" async>
    <!-- jQuery 3.5.0 reference -->
    <script src="https://code.jquery.com/jquery-3.5.0.min.js"  crossorigin="anonymous"></script>
    <!-- JS references for slider, lightbox and main -->
    {%if activePage == 'home' -%}
        <script src="{{js_defaultpath}}/plugins/slider.js" type="text/javascript" async></script>
        <script src="{{js_defaultpath}}/plugins/simple-lightbox.js" type="text/javascript" async></script>
    {%- endif %}
    <script src="{{js_defaultpath}}/plugins/alert.js" type="text/javascript" async></script>
    <script src="{{js_defaultpath}}/plugins/scroll-to-top.js" type="text/javascript" async></script>
    <script src="{{js_defaultpath}}/main.js" type="text/javascript" async></script>
    <!-- Registering a service worker -->
    <script>
        /* if ('serviceWorker' in navigator) {
            window.addEventListener('load', function() {
                // Unregister the existing service worker - Workaround to fix the cache issue.
                navigator.serviceWorker.getRegistrations().then(function(registrations) {
                    for(let registration of registrations) {
                        registration.unregister();
                    }
                });

                // Register the service worker
                navigator.serviceWorker.register('/serviceworker.js').then(function(registration) {
                // Registration was successful
                    console.log('ServiceWorker registration successful with scope: ', registration.scope);
                }, function(err) {
                // registration failed :(
                console.log('ServiceWorker registration failed: ', err);
                });
            });
        } */

        // make the whole serviceworker process into a promise so later on we can
        // listen to it and in case new content is available a toast will be shown
        window.isUpdateAvailable = new Promise(function(resolve, reject) {
            // lazy way of disabling service workers while developing
            if ('serviceWorker' in navigator) {
                // register service worker file
                navigator.serviceWorker.register('/serviceworker.js')
                    .then(reg => {
                        reg.onupdatefound = () => {
                            const installingWorker = reg.installing;
                            installingWorker.onstatechange = () => {
                                switch (installingWorker.state) {
                                    case 'installed':
                                        if (navigator.serviceWorker.controller) {
                                            // new update available
                                            resolve(true);
                                        } else {
                                            // no update available
                                            resolve(false);
                                        }
                                        break;
                                }
                            };
                        };
                    })
                    .catch(err => console.error('[SW ERROR]', err));
            }
        });

        // listen to the service worker promise in index.html to see if there has been a new update.
        // condition: the service-worker.js needs to have some kind of change - e.g. increment CACHE_VERSION.
        window['isUpdateAvailable']
            .then(isAvailable => {
                if (isAvailable) {
                    // new update available
                    let snackbar = document.getElementById('snackbar');
                    snackbar.className = 'show';
                }
            });
    </script>
{%- endmacro %}