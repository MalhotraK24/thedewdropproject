<!DOCTYPE html>
<html lang="en">
    <head>
        {% block head %} {% endblock %}
        <script>
            // make the whole serviceworker process into a promise so later on we can
            // listen to it and in case new content is available a notification will be shown
            window.isUpdateAvailable = new Promise(function(resolve, reject) {
                // lazy way of disabling service workers while developing
                if ('serviceWorker' in navigator && ['localhost', '127'].indexOf(location.hostname) === -1) {
                    // register service worker file
                    navigator.serviceWorker.register('/serviceworker.js')
                    .then(reg => {
                        // Registration was successful
                        console.log('ServiceWorker registration successful with scope: ', reg.scope);
                        reg.onupdatefound = () => {
                            const installingWorker = reg.installing;
                            installingWorker.onstatechange = () => {
                                switch (installingWorker.state) {
                                    case 'installed':
                                        if (navigator.serviceWorker.controller) {
                                            // new update available
                                            resolve(true);
                                        } else {
                                            // no update available
                                            resolve(false);
                                        }
                                        break;
                                }
                            };
                        };
                    })
                    .catch(err => console.error('[SW ERROR]', err));
                }
            });
        </script>
    </head>
    <body>
        <div id="snackbar">A new version of this app is available.<a id="reload">Update</a><a id="close"></a></div>
        {% block content %} {% endblock %}
        {% include "./partials/_footer.njk" %}
        {% include "./partials/_scroll-to-top.njk" %}
        <script>
            let snackbar = document.getElementById('snackbar');
            let mobileNav = document.getElementById('mobile-nav');
            let menuIcon = document.getElementById('menu-icon');
            let closeIcon = document.getElementById('close-icon');

            // listen to the service worker promise in index.html to see if there has been a new update.
            // condition: the service-worker.js needs to have some kind of change - e.g. increment CACHE_VERSION.
            window['isUpdateAvailable']
            .then(isAvailable => {
                if (isAvailable) {
                    // new update available
                    snackbar.className = 'show';
                }
            });

            // The click event on the pop up notification
            document.getElementById('reload').addEventListener('click', function(){
                window.location.reload();
            });

            // The click event on the pop up notification
            document.getElementById('close').addEventListener('click', function(){
                snackbar.classList.add("visually-hidden");
            });

            // The click event on the mobile navigation menu
            menuIcon.addEventListener('click', function(){
                mobileNav.classList.remove("visually-hidden");
                menuIcon.classList.add("visually-hidden");
            });

            // The click event on the mobile navigation menu
            closeIcon.addEventListener('click', function(){
                mobileNav.classList.add("visually-hidden");
                menuIcon.classList.remove("visually-hidden");
            });
        </script>
    </body>
</html>